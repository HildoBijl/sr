{
  "rules": {
    "users": {
      "$uid": {
        ".write": "auth != null && auth.uid == $uid || newData.parent().parent().child('users').child(auth.uid).child('role').val() == 'admin'",
        "preferences": {
          ".validate": "newData.hasChildren(['showName', 'showEmail', 'showPicture'])",
          "showName": {
            ".validate": "newData.isBoolean()"
          },
          "showEmail": {
            ".validate": "newData.isBoolean()"
          },
          "showPicture": {
            ".validate": "newData.isBoolean()"
          },
          "$other": {
            ".validate": "false"
          },
          ".read": "true"
        },
        "userData": {
          ".validate": "newData.hasChildren(['name', 'email']) && newData.child('excuse').val().length < 20 && newData.child('respectRating').val() < 5",
          "name": {
            ".validate": "newData.isString()",
            ".read": "auth != null && auth.uid == $uid || root.child('users').child(auth.uid).child('role').val() == 'admin' || data.parent().child('preferences').child('showName').val() == true"
          },
          "email": {
            ".validate": "newData.isString()",
            ".read": "auth != null && auth.uid == $uid || root.child('users').child(auth.uid).child('role').val() == 'admin' || data.parent().child('preferences').child('showEmail').val() == true"
          },
          "$other": {
            ".validate": "false"
          }
        }
      }
    }
  }
}
